name: Build WebTvMux macOS Release

on:
  workflow_dispatch:
  push:
    branches: [ main ]

jobs:
  build-macos:
    name: Build & Package WebTvMux for macOS
    runs-on: macos-latest

    steps:
      # -------------------------------
      # ‚úÖ Checkout repo
      # -------------------------------
      - name: Checkout repository
        uses: actions/checkout@v4

      # -------------------------------
      # ‚úÖ Set up Python
      # -------------------------------
      - name: Set up Python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # -------------------------------
      # ‚úÖ Install dependencies
      # -------------------------------
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller PySide6

      # -------------------------------
      # ‚úÖ Verify bin/config folders
      # -------------------------------
      - name: Verify bin and config
        run: |
          echo "üß© Checking local binaries and configs..."
          ls -lh bin || echo "‚ö†Ô∏è bin folder missing"
          ls -lh config || echo "‚ö†Ô∏è config folder missing"

          # Rename yt-dlp_macos if present
          if [ -f "bin/yt-dlp_macos" ]; then
            mv bin/yt-dlp_macos bin/yt-dlp
            echo "üîß Renamed yt-dlp_macos ‚Üí yt-dlp"
          fi

          # Ensure executables are runnable
          chmod +x bin/* || true
          echo "‚úÖ All binaries are executable"

      # -------------------------------
      # ‚úÖ Build with PyInstaller
      # -------------------------------
      - name: Build macOS app using PyInstaller
        run: |
          echo "üöÄ Building optimized macOS app..."
          python -m PyInstaller build_macos.spec

      # -------------------------------
      # ‚úÖ Strip unused Qt frameworks
      # -------------------------------
      - name: Remove unused Qt frameworks
        run: |
          echo "üßπ Removing unused Qt frameworks..."
          find dist/WebTvMux.app -name "Qt3D*" -delete || true
          find dist/WebTvMux.app -name "QtQuick*" -delete || true
          find dist/WebTvMux.app -name "QtQml*" -delete || true
          find dist/WebTvMux.app -name "QtMultimedia*" -delete || true
          find dist/WebTvMux.app -name "QtShaderTools*" -delete || true
          find dist/WebTvMux.app -name "QtPdf*" -delete || true
          find dist/WebTvMux.app -name "QtGraphs*" -delete || true
          echo "‚úÖ Slim cleanup complete."

      # -------------------------------
      # ‚úÖ Inspect build results
      # -------------------------------
      - name: Inspect build results
        run: |
          echo "üì¶ Build output in dist/:"
          ls -R dist || true
          echo ""
          echo "üìè Size summary:"
          du -sh dist/* | sort -h || true

      # -------------------------------
      # ‚úÖ Ad-hoc sign to bypass Gatekeeper
      # -------------------------------
      - name: Ad-hoc sign .app
        run: |
          if [ -d "dist/WebTvMux.app" ]; then
            echo "üîè Signing WebTvMux.app ad-hoc..."
            codesign --force --deep --sign - "dist/WebTvMux.app" || true
          fi

      # -------------------------------
      # ‚úÖ Safe ZIP packaging
      # -------------------------------
      - name: Package into ZIP (Release folder)
        run: |
          echo "üì¶ Preparing release folder..."
          mkdir -p dist/release

          if [ -d "dist/WebTvMux.app" ]; then
            cp -R dist/WebTvMux.app dist/release/
          else
            echo "‚ùå WebTvMux.app not found!"
            exit 1
          fi

          if [ -f "dist/WebTvMux.dmg" ]; then
            cp dist/WebTvMux.dmg dist/release/
          else
            echo "‚ö†Ô∏è No DMG found, continuing..."
          fi

          cd dist/release
          echo "üì¶ Creating WebTvMux-macOS.zip..."
          zip -r ../WebTvMux-macOS.zip . || exit 1
          cd ../..
          echo "‚úÖ Created dist/WebTvMux-macOS.zip"

      # -------------------------------
      # ‚úÖ Upload artifacts
      # -------------------------------
      - name: Upload macOS artifacts
        uses: actions/upload-artifact@v4
        with:
          name: WebTvMux-macOS-Release
          path: |
            dist/WebTvMux.app
            dist/WebTvMux.dmg
            dist/WebTvMux-macOS.zip
            dist/release/

      # -------------------------------
      # ‚úÖ Final summary
      # -------------------------------
      - name: Final build summary
        run: |
          echo "üéâ WebTvMux macOS build complete!"
          echo ""
          echo "üìÇ dist folder contents:"
          ls -lh dist || true
          echo ""
          echo "üìè Size report:"
          du -sh dist/* | sort -h
          echo ""
          echo "‚úÖ Artifacts uploaded to Actions ‚Üí Artifacts tab."
