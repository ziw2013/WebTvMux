name: Build macOS App (Unsigned Final, Fully Working)

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-macos:
    runs-on: macos-latest

    steps:
      # --- 1. Checkout the repository ---
      - name: Checkout repository
        uses: actions/checkout@v4

      # --- 2. Prepare bin/config BEFORE installing PyInstaller ---
      - name: Prepare bin and config
        run: |
          mkdir -p bin config
          echo "‚¨áÔ∏è Downloading ffmpeg, ffprobe, and yt-dlp for macOS..."

          # ‚úÖ Use Evermeet.cx static universal binaries
          curl -L -o bin/ffmpeg.zip https://evermeet.cx/ffmpeg/getrelease/ffmpeg/zip
          curl -L -o bin/ffprobe.zip https://evermeet.cx/ffmpeg/getrelease/ffprobe/zip

          echo "üì¶ Unzipping ffmpeg & ffprobe..."
          unzip -o bin/ffmpeg.zip -d bin/
          unzip -o bin/ffprobe.zip -d bin/
          rm bin/*.zip
          chmod +x bin/ffmpeg bin/ffprobe

          # ‚úÖ yt-dlp (universal macOS binary)
          echo "‚¨áÔ∏è Downloading yt-dlp..."
          curl -L -o bin/yt-dlp https://github.com/yt-dlp/yt-dlp/releases/latest/download/yt-dlp_macos
          chmod +x bin/yt-dlp

          # ‚úÖ Add config if missing
          if [ ! -f "config/languages.json" ]; then
            echo '{}' > config/languages.json
          fi

          echo "‚úÖ Download complete. Contents of bin/:"
          find bin -type f -exec ls -lh {} \;
          echo "‚úÖ Contents of config/:"
          find config -type f -exec ls -lh {} \;

      # --- 3. Set up Python ---
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # --- 4. Install dependencies ---
      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller PySide6

      # --- 5. Pre-build verification ---
      - name: Verify before build
        run: |
          echo "üîç Pre-build verification:"
          find bin config -type f -exec ls -lh {} \;
          file bin/ffmpeg || true
          file bin/ffprobe || true
          file bin/yt-dlp || true

      # --- 6. Build .app and .dmg ---
      - name: Build macOS app
        run: |
          echo "üöÄ Running PyInstaller..."
          pyinstaller build_macos.spec
          echo "‚úÖ Build completed."
          du -sh dist/* || true

      # --- 7. Verify inside .app ---
      - name: Verify embedded resources
        run: |
          echo "üîç Checking contents of .app:"
          find dist/WebTvMux.app/Contents/MacOS -maxdepth 2 -type f || echo "‚ö†Ô∏è Missing bin/config!"
          du -sh dist/WebTvMux.app dist/WebTvMux.dmg || true

      # --- 8. Upload both .app and .dmg ---
      - name: Upload macOS build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: WebTvMux-macos-build
          path: |
            dist/WebTvMux.app
            dist/WebTvMux.dmg
